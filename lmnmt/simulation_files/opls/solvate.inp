* Solvate Protein
* This script will make a a CUBIC with 10 angstroms from
* the edge.
*

! read topology and parameter files
stream toppar.str

! read the psf and coordinate file
bomlev -1 
read psf card name @run/@prot-@lig.psf
bomlev 0
read coor card name @run/@prot-@lig-initialmini.crd

! TIM: orient about origin so the alignment is correct with the
! water crystal.
coordinate orient

! Takes statistics on coordinates to figure out the minimum, maximum, and
! average values of the X, Y, and Z coordinates. These are stored in
! XMIN,XMAX,XAVE,YMIN,YMAX,YAVE,ZMIN,ZMAX,ZAVE.
coordinate statistics select all end

! Read in water sequence
read sequence tips 46656

bomlev -1 !! The sum of charges from LigParGen is not an integer
! Generate new segment for the water
generate bwat noangle nodihedral
bomlev 0

! Read the water PDB coordinates and append them to the protein
read coor card append name water.crd
coordinate orient noro select segid bwat end

! Delete waters which overlap with protein
bomlev -1 !! The sum of charges from LigParGen is not an integer
delete atom sort -
select .byres. (segid bwat .AND. type oh2 .and. -
((.not. (segid bwat .OR. hydrogen)) .around. 2.5)) end

! xdim, ydim, and zdim are variables that store the dimensions of the protein along the x, y, and z axis respectivley

! Because we want 10.0 distance from the edge,
! the distance is multipled by two and then added to the diameter of the structure.
calc xdim = ( abs ( ?XMAX - ?XMIN ) + 20.0  )
calc ydim = ( abs ( ?YMAX - ?YMIN ) + 20.0  )
calc zdim = ( abs ( ?ZMAX - ?ZMIN ) + 20.0  )

! coor orient guarantees that the X axis is the longest axis and the Y
! axis is the second longest

set greatervalue = @xdim
set secondvalue = @ydim

set headstr = cubic with a crystal dimension of @greatervalue

! OK, now we set a safe spherical diameter (based on the minimum sphere that will circumscribe a cube of this dimension), delete
! all but the sphere of that radius, and then build the crystal structure.
calc gvsq = @greatervalue * @greatervalue
calc safesphere = sqrt( 3 * @gvsq )
calc safesphere = @safesphere/2
delete atom sort select .byres. ( .not. ( point 0. 0. 0. cut @safesphere ) .and. ( segid bwat ) ) end

! 90.0, 90.0, and 90.0 are the three angles needed to make a CUBIC crystal,
crystal define cubic @greatervalue @greatervalue @greatervalue 90.0 90.0 90.0
crystal build noper 0
image byres sele segid bwat end
coor copy comp

! set wrnlev down to reduce clutter...
wrnlev 1

! Update the image lists. If any atoms move during this process, it means that they are extraneous
! to the crystal structure that we want to build and should be deleted. Therefore, coor diff is used to
! detect moving atoms, which had selected for deletion.
update inbfrq 0

coor diff
define sel1   -
select .byres. (property x .ne. 0.0 .or. property y .ne. 0.0 .or. property z .ne. 0.0) end

coor swap

! we need to set bomlev down, otherwise we get an error about modifying the PSF when image
! centering is active
bomlev -1
delete atom sele sel1 end
bomlev 0

! we want to do a quick-and-dirty minimization to remove bad contacts. Therefore, we should
! set up shake and the non-bond parameters again.
shake bonh param sele all end
nbond inbfrq -1 elec fswitch vdw vswitch cutnb 16. ctofnb 12. ctonnb 10.
mini sd nstep 100 nprint 10 tolgrd 100.0

ioform extended

! since we've changed the structure by adding waters, we need to write out a new PSF
write psf card name @run/@prot-@lig-solvated.psf
* new_@prot_@lig_solvated.psf
* solvation: @headstr
*

write coor card name @run/@prot-@lig-solvated.crd
* new_@prot_@lig_solvated.crd
* solvation: @headstr
*

! determine the net charge on the system
scalar charge stat sele all end
set chrg = ?stot

stop

